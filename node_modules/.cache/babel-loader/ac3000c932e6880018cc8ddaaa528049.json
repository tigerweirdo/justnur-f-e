{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const [lottieSize, setLottieSize] = useState(window.innerWidth * 0.1); // lottieSize state olarak değiştirildi\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false\n  });\n  const resizeListener = () => {\n    setLottieSize(window.innerWidth * 0.2);\n    setState(prevState => ({\n      ...prevState,\n      position: -lottieSize\n    }));\n  };\n  useEffect(() => {\n    window.addEventListener('resize', resizeListener);\n    return () => window.removeEventListener('resize', resizeListener);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 2);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state, lottieSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        width: lottieSize // sincabın genişliğini lottieSize ile kontrol et\n      },\n      children: [/*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel,\n        style: {\n          width: '50%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"knTet+1ehwQotDDsR9ga/Cxo+nQ=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","setLottieSize","window","innerWidth","state","setState","position","direction","waiting","resizeListener","prevState","addEventListener","removeEventListener","interval","setInterval","newPosition","setTimeout","Math","random","clearInterval","className","children","style","left","transform","width","animationData","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const [lottieSize, setLottieSize] = useState(window.innerWidth * 0.1); // lottieSize state olarak değiştirildi\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false});\n\n    const resizeListener = () => {\n        setLottieSize(window.innerWidth * 0.2);\n        setState(prevState => ({...prevState, position: -lottieSize}));\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', resizeListener);\n        return () => window.removeEventListener('resize', resizeListener);\n    }, []);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 2);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [state, lottieSize]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`,\n                    width: lottieSize, // sincabın genişliğini lottieSize ile kontrol et\n                }}\n            >\n                <Lottie animationData={squirrel} style={{ width: '50%', height: 'auto' }} /> {/* sincabın boyutunu CSS yerine burada kontrol et */}\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACS,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IAACa,QAAQ,EAAE,CAACN,UAAU;IAAEO,SAAS,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;EAEzF,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBR,aAAa,CAACC,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;IACtCE,QAAQ,CAACK,SAAS,KAAK;MAAC,GAAGA,SAAS;MAAEJ,QAAQ,EAAE,CAACN;IAAU,CAAC,CAAC,CAAC;EAClE,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZU,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEF,cAAc,CAAC;IACjD,OAAO,MAAMP,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAEH,cAAc,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZ,MAAMqB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGV,KAAK,CAACI,OAAO,EAAE;MAClB,IAAIO,WAAW,GAAGX,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACG,SAAS,GAAG,CAAC;MACtD,IAAIQ,WAAW,GAAGb,MAAM,CAACC,UAAU,GAAGH,UAAU,IAAII,KAAK,CAACG,SAAS,KAAK,CAAC,EAAE;QACvEF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE;QAAI,CAAC,CAAC;QACnCQ,UAAU,CAAC,MAAM;UACbX,QAAQ,CAAC;YAACC,QAAQ,EAAEJ,MAAM,CAACC,UAAU,GAAGH,UAAU;YAAEO,SAAS,EAAE,CAAC,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACvF,CAAC,EAAES,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM,IAAIH,WAAW,GAAG,CAACf,UAAU,IAAII,KAAK,CAACG,SAAS,KAAK,CAAC,CAAC,EAAE;QAC5DF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE;QAAI,CAAC,CAAC;QACnCQ,UAAU,CAAC,MAAM;UACbX,QAAQ,CAAC;YAACC,QAAQ,EAAE,CAACN,UAAU;YAAEO,SAAS,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACnE,CAAC,EAAES,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM;QACHb,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEE,QAAQ,EAAES;QAAW,CAAC,CAAC;MAC/C;IACJ,CAAC,EAAE,CAAC,CAAC;IACL,OAAO,MAAM;MACTI,aAAa,CAACN,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAACT,KAAK,EAAEJ,UAAU,CAAC,CAAC;EAEvB,oBACIH,OAAA;IAAKuB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCxB,OAAA;MACIuB,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACHhB,QAAQ,EAAE,UAAU;QACpBiB,IAAI,EAAG,GAAEnB,KAAK,CAACE,QAAS,IAAG;QAC3BkB,SAAS,EAAG,UAASpB,KAAK,CAACG,SAAU,GAAE;QACvCkB,KAAK,EAAEzB,UAAU,CAAE;MACvB,CAAE;MAAAqB,QAAA,gBAEFxB,OAAA,CAACH,MAAM;QAACgC,aAAa,EAAE/B,QAAS;QAAC2B,KAAK,EAAE;UAAEG,KAAK,EAAE,KAAK;UAAEE,MAAM,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChC,EAAA,CApDID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}