{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const lottieSize = 150;\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 2);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"hvhrQiGHvwUq8ut0ffiuCu+xhr8=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","state","setState","position","direction","waiting","interval","setInterval","newPosition","window","innerWidth","setTimeout","Math","random","clearInterval","className","children","style","left","transform","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const lottieSize = 150;\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false});\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 2);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [state]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`\n                }}\n            >\n                <Lottie animationData={squirrel} />\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,UAAU,GAAG,GAAG;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAACU,QAAQ,EAAE,CAACH,UAAU;IAAEI,SAAS,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;EAEzFb,SAAS,CAAC,MAAM;IACZ,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGN,KAAK,CAACI,OAAO,EAAE;MAClB,IAAIG,WAAW,GAAGP,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACG,SAAS,GAAG,CAAC;MACtD,IAAII,WAAW,GAAGC,MAAM,CAACC,UAAU,GAAGV,UAAU,IAAIC,KAAK,CAACG,SAAS,KAAK,CAAC,EAAE;QACvEF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE;QAAI,CAAC,CAAC;QACnCM,UAAU,CAAC,MAAM;UACbT,QAAQ,CAAC;YAACC,QAAQ,EAAEM,MAAM,CAACC,UAAU,GAAGV,UAAU;YAAEI,SAAS,EAAE,CAAC,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACvF,CAAC,EAAEO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM,IAAIL,WAAW,GAAG,CAACR,UAAU,IAAIC,KAAK,CAACG,SAAS,KAAK,CAAC,CAAC,EAAE;QAC5DF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE;QAAI,CAAC,CAAC;QACnCM,UAAU,CAAC,MAAM;UACbT,QAAQ,CAAC;YAACC,QAAQ,EAAE,CAACH,UAAU;YAAEI,SAAS,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACnE,CAAC,EAAEO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM;QACHX,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEE,QAAQ,EAAEK;QAAW,CAAC,CAAC;MAC/C;IACJ,CAAC,EAAE,CAAC,CAAC;IACL,OAAO,MAAM;MACTM,aAAa,CAACR,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACIJ,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCnB,OAAA;MACIkB,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACHd,QAAQ,EAAE,UAAU;QACpBe,IAAI,EAAG,GAAEjB,KAAK,CAACE,QAAS,IAAG;QAC3BgB,SAAS,EAAG,UAASlB,KAAK,CAACG,SAAU;MACzC,CAAE;MAAAY,QAAA,eAEFnB,OAAA,CAACH,MAAM;QAAC0B,aAAa,EAAEzB;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAzCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}