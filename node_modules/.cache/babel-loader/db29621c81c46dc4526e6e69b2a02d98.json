{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport './animation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const initialSize = 100; // Sizin belirttiğiniz boyut\n  const [state, setState] = useState({\n    position: -initialSize,\n    direction: 1,\n    waiting: false\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 5; // Hızı artırmak için 1'i 5 ile değiştirdim\n      if (newPosition > document.documentElement.clientWidth - initialSize && state.direction === 1) {\n        setState(prevState => ({\n          ...prevState,\n          waiting: true\n        }));\n        setTimeout(() => {\n          setState({\n            position: document.documentElement.clientWidth - initialSize,\n            direction: -1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -initialSize && state.direction === -1) {\n        setState(prevState => ({\n          ...prevState,\n          waiting: true\n        }));\n        setTimeout(() => {\n          setState({\n            position: -initialSize,\n            direction: 1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState(prevState => ({\n          ...prevState,\n          position: newPosition\n        }));\n      }\n    }, 20); // Animasyon hızını kontrol eder\n    return () => clearInterval(interval);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        transform: `translateX(${state.position}px) scaleX(${state.direction})`,\n        width: `${initialSize}px`,\n        height: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"eqktyFXRA2DhmgRe9Onu4anSCME=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","initialSize","state","setState","position","direction","waiting","interval","setInterval","newPosition","document","documentElement","clientWidth","prevState","setTimeout","Math","random","clearInterval","className","children","style","transform","width","height","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\nimport './animation.css';\n\nconst Animation = () => {\n    const initialSize = 100; // Sizin belirttiğiniz boyut\n    const [state, setState] = useState({\n        position: -initialSize,\n        direction: 1,\n        waiting: false,\n    });\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (state.waiting) return;\n            let newPosition = state.position + state.direction * 5; // Hızı artırmak için 1'i 5 ile değiştirdim\n            if (newPosition > document.documentElement.clientWidth - initialSize && state.direction === 1) {\n                setState(prevState => ({\n                    ...prevState,\n                    waiting: true,\n                }));\n                setTimeout(() => {\n                    setState({\n                        position: document.documentElement.clientWidth - initialSize,\n                        direction: -1,\n                        waiting: false,\n                    });\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -initialSize && state.direction === -1) {\n                setState(prevState => ({\n                    ...prevState,\n                    waiting: true,\n                }));\n                setTimeout(() => {\n                    setState({\n                        position: -initialSize,\n                        direction: 1,\n                        waiting: false,\n                    });\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState(prevState => ({\n                    ...prevState,\n                    position: newPosition,\n                }));\n            }\n        }, 20); // Animasyon hızını kontrol eder\n        return () => clearInterval(interval);\n    }, [state]);\n    \n   \n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    transform: `translateX(${state.position}px) scaleX(${state.direction})`,\n                    width: `${initialSize}px`,\n                    height: 'auto'\n                }}\n            >\n                <Lottie animationData={squirrel} />\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}