{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport lottie from 'lottie-web';\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const lottieSize = 250;\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false,\n    opacity: 1\n  });\n  const animationContainer = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animationContainer.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: squirrel\n    });\n    animation.addEventListener('DOMLoaded', () => {\n      // Total animation duration in seconds\n      const totalDuration = animation.totalFrames / animation.frameRate;\n\n      // Animation duration up to 99%\n      const partialDuration = totalDuration * 0.99;\n\n      // Time in frames for 99% of the animation\n      const partialTimeInFrames = partialDuration * animation.frameRate;\n      animation.goToAndStop(partialTimeInFrames, true);\n    });\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 2);\n    return () => {\n      clearInterval(interval);\n      animation.destroy();\n    };\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      ref: animationContainer,\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        opacity: `${state.opacity}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"ofOOUkYta7gBzRHYfIcjCrc5kFk=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","state","setState","position","direction","waiting","opacity","animationContainer","createRef","animation","loadAnimation","container","current","renderer","loop","autoplay","animationData","addEventListener","totalDuration","totalFrames","frameRate","partialDuration","partialTimeInFrames","goToAndStop","interval","setInterval","newPosition","window","innerWidth","setTimeout","Math","random","clearInterval","destroy","className","children","ref","style","left","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport lottie from 'lottie-web';\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const lottieSize = 250;\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n    const animationContainer = React.createRef();\n\n    useEffect(() => {\n        const animation = lottie.loadAnimation({\n            container: animationContainer.current,\n            renderer: 'svg',\n            loop: false,\n            autoplay: false,\n            animationData: squirrel,\n        });\n\n        animation.addEventListener('DOMLoaded', () => {\n            // Total animation duration in seconds\n            const totalDuration = animation.totalFrames / animation.frameRate;\n\n            // Animation duration up to 99%\n            const partialDuration = totalDuration * 0.99;\n\n            // Time in frames for 99% of the animation\n            const partialTimeInFrames = partialDuration * animation.frameRate;\n\n            animation.goToAndStop(partialTimeInFrames, true);\n        });\n        \n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 2);\n\n        return () => {\n            clearInterval(interval);\n            animation.destroy();\n        };\n    }, [state]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                ref={animationContainer}\n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`,\n                    opacity: `${state.opacity}`,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}