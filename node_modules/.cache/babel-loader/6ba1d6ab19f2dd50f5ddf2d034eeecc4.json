{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport { Player } from 'lottie-web';\nimport { useLottie, Lottie } from 'lottie-react';\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const lottieSize = 250;\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false,\n    opacity: 1\n  });\n  const lottieOptions = {\n    animationData: squirrel,\n    loop: false,\n    autoplay: false\n  };\n  const {\n    View\n  } = useLottie(lottieOptions, lottieSize);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 2);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state]);\n  useEffect(() => {\n    const animationInstance = Player.current;\n    if (animationInstance) {\n      const totalFrames = animationInstance.totalFrames;\n      animationInstance.goToAndStop(totalFrames - 1, true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        opacity: `${state.opacity}`\n      },\n      children: View\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"JoZNecF3mr0LojRUTqOzG1Rd3uw=\", false, function () {\n  return [useLottie];\n});\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Player","useLottie","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","state","setState","position","direction","waiting","opacity","lottieOptions","animationData","loop","autoplay","View","interval","setInterval","newPosition","window","innerWidth","setTimeout","Math","random","clearInterval","animationInstance","current","totalFrames","goToAndStop","className","children","style","left","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\nimport './animation.css';\nimport { Player } from 'lottie-web';\nimport { useLottie, Lottie } from 'lottie-react';\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const lottieSize = 250;\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n    const lottieOptions = {\n        animationData: squirrel,\n        loop: false,\n        autoplay: false,\n    };\n    const { View } = useLottie(lottieOptions, lottieSize);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 2);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [state]);\n\n    useEffect(() => {\n        const animationInstance = Player.current;\n        if (animationInstance) {\n            const totalFrames = animationInstance.totalFrames;\n            animationInstance.goToAndStop(totalFrames - 1, true);\n        }\n    }, []);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`,\n                    opacity: `${state.opacity}`\n                }}\n            >\n                {View}\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}