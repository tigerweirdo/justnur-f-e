{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const initialSize = window.innerWidth * 0.2;\n  const [lottieSize, setLottieSize] = useState(initialSize);\n  const [state, setState] = useState({\n    position: -initialSize,\n    direction: 1,\n    waiting: false\n  });\n  const resizeListener = () => {\n    const newSize = window.innerWidth * 0.2;\n    setLottieSize(newSize);\n    setState(prevState => ({\n      ...prevState,\n      position: -newSize\n    }));\n  };\n  useEffect(() => {\n    window.addEventListener('resize', resizeListener);\n    return () => window.removeEventListener('resize', resizeListener);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize / 2 && state.direction === 1) {\n        // lottieSize/2 ekledik\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize / 2,\n            direction: -1,\n            waiting: false\n          }); // lottieSize/2 ekledik\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize / 2 && state.direction === -1) {\n        // lottieSize/2 ekledik\n        setState({\n          ...state,\n          waiting: true\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize / 2,\n            direction: 1,\n            waiting: false\n          }); // lottieSize/2 ekledik\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 2);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state, lottieSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        width: `${lottieSize}px` // pixel cinsinden belirtildi\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel,\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"ORxyji1mV5VYEqtv96veKxqOoA8=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","initialSize","window","innerWidth","lottieSize","setLottieSize","state","setState","position","direction","waiting","resizeListener","newSize","prevState","addEventListener","removeEventListener","interval","setInterval","newPosition","setTimeout","Math","random","clearInterval","className","children","style","left","transform","width","animationData","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const initialSize = window.innerWidth * 0.2;\n    const [lottieSize, setLottieSize] = useState(initialSize);\n    const [state, setState] = useState({position: -initialSize, direction: 1, waiting: false});\n\n    const resizeListener = () => {\n        const newSize = window.innerWidth * 0.2;\n        setLottieSize(newSize);\n        setState(prevState => ({...prevState, position: -newSize}));\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', resizeListener);\n        return () => window.removeEventListener('resize', resizeListener);\n    }, []);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize/2 && state.direction === 1) { // lottieSize/2 ekledik\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize/2, direction: -1, waiting: false}); // lottieSize/2 ekledik\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize/2 && state.direction === -1) { // lottieSize/2 ekledik\n                setState({...state, waiting: true});\n                setTimeout(() => {\n                    setState({position: -lottieSize/2, direction: 1, waiting: false}); // lottieSize/2 ekledik\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 2);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [state, lottieSize]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`,\n                    width: `${lottieSize}px` // pixel cinsinden belirtildi\n                }}\n            >\n                <Lottie animationData={squirrel} style={{ width: '100%', height: 'auto' }} />\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}