{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport './animation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [lottieSize, setLottieSize] = useState(window.innerWidth * 0.2);\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false\n  });\n  const updateDimensions = () => {\n    const newSize = window.innerWidth * 0.2;\n    setWindowWidth(window.innerWidth);\n    setLottieSize(newSize);\n    setState(prevState => ({\n      ...prevState,\n      position: -newSize\n    }));\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 5;\n      if (newPosition > windowWidth - lottieSize / 2 && state.direction === 1) {\n        setState(prevState => ({\n          ...prevState,\n          waiting: true\n        }));\n        setTimeout(() => {\n          setState({\n            position: windowWidth - lottieSize / 2,\n            direction: -1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState(prevState => ({\n          ...prevState,\n          waiting: true\n        }));\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState(prevState => ({\n          ...prevState,\n          position: newPosition\n        }));\n      }\n    }, 20);\n    return () => clearInterval(interval);\n  }, [state, windowWidth, lottieSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    style: {\n      overflow: 'hidden',\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        width: `${lottieSize}px`,\n        height: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Animation, \"hHjLJqWpxzMlBM22ut9qhOAy4mw=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","windowWidth","setWindowWidth","window","innerWidth","lottieSize","setLottieSize","state","setState","position","direction","waiting","updateDimensions","newSize","prevState","addEventListener","removeEventListener","interval","setInterval","newPosition","setTimeout","Math","random","clearInterval","className","style","overflow","children","left","transform","width","height","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport './animation.css';\n\nconst Animation = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [lottieSize, setLottieSize] = useState(window.innerWidth * 0.2);\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false,\n  });\n\n  const updateDimensions = () => {\n    const newSize = window.innerWidth * 0.2;\n    setWindowWidth(window.innerWidth);\n    setLottieSize(newSize);\n    setState((prevState) => ({ ...prevState, position: -newSize }));\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 5;\n      if (\n        newPosition > windowWidth - lottieSize / 2 &&\n        state.direction === 1\n      ) {\n        setState((prevState) => ({ ...prevState, waiting: true }));\n        setTimeout(() => {\n          setState({\n            position: windowWidth - lottieSize / 2,\n            direction: -1,\n            waiting: false,\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (\n        newPosition < -lottieSize &&\n        state.direction === -1\n      ) {\n        setState((prevState) => ({ ...prevState, waiting: true }));\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false,\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState((prevState) => ({\n          ...prevState,\n          position: newPosition,\n        }));\n      }\n    }, 20);\n    return () => clearInterval(interval);\n  }, [state, windowWidth, lottieSize]);\n\n  return (\n    <div className=\"animation-container\" style={{ overflow: 'hidden', position: 'relative' }}>\n      <div\n        className=\"squirrel\"\n        style={{\n          position: \"absolute\",\n          left: `${state.position}px`,\n          transform: `scaleX(${state.direction})`,\n          width: `${lottieSize}px`,\n          height: 'auto',\n        }}\n      >\n        <Lottie animationData={squirrel} />\n      </div>\n    </div>\n  );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}