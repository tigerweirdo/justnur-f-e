{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const lottieSize = 250;\n  const [isVisible, setIsVisible] = useState(false);\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false,\n    opacity: 1\n  });\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, 3000); // 3000ms = 3s\n\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    if (!isVisible) return;\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 3);\n    return () => clearInterval(interval);\n  }, [state, isVisible]);\n  return isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        opacity: `${state.opacity}`\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n_s(Animation, \"RiW5pkSj3vBE2EVviuXf3dM4BZ0=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","isVisible","setIsVisible","state","setState","position","direction","waiting","opacity","timer","setTimeout","clearTimeout","interval","setInterval","newPosition","window","innerWidth","Math","random","clearInterval","className","children","style","left","transform","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const lottieSize = 250;\n    const [isVisible, setIsVisible] = useState(false);\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsVisible(true);\n        }, 3000);  // 3000ms = 3s\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    useEffect(() => {\n        if(!isVisible) return;\n        \n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 3);\n        \n        return () => clearInterval(interval);\n    }, [state, isVisible]);\n\n    return (\n        isVisible && (\n            <div className=\"animation-container\">\n                <div \n                    className=\"squirrel\" \n                    style={{ \n                        position: \"absolute\",\n                        left: `${state.position}px`,\n                        transform: `scaleX(${state.direction})`,\n                        opacity: `${state.opacity}`\n                    }}\n                >\n                    <Lottie animationData={squirrel} />\n                </div>\n            </div>\n        )\n    );\n};\n\nexport default Animation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}