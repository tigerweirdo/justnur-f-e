{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const lottieSize = 250;\n  const animationContainer = useRef(null);\n  const [totalDuration, setTotalDuration] = useState(null);\n  const [state, setState] = useState({\n    position: -lottieSize,\n    direction: 1,\n    waiting: false,\n    opacity: 1\n  });\n\n  // Load the total duration of the animation at the start\n  useEffect(() => {\n    if (animationContainer.current) {\n      setTotalDuration(animationContainer.current.getDuration(true));\n    }\n  }, []);\n  useEffect(() => {\n    // Ensure totalDuration is loaded\n    if (!totalDuration) return;\n\n    // Animation duration up to 98%\n    const partialDuration = totalDuration * 0.98;\n    const interval = setInterval(() => {\n      if (state.waiting) return;\n      let newPosition = state.position + state.direction * 1;\n      if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: window.innerWidth - lottieSize,\n            direction: -1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else if (newPosition < -lottieSize && state.direction === -1) {\n        setState({\n          ...state,\n          waiting: true,\n          opacity: 0\n        });\n        setTimeout(() => {\n          setState({\n            position: -lottieSize,\n            direction: 1,\n            waiting: false,\n            opacity: 1\n          });\n        }, Math.random() * 2000 + 1000);\n      } else {\n        setState({\n          ...state,\n          position: newPosition\n        });\n      }\n    }, 10);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state, totalDuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        left: `${state.position}px`,\n        transform: `scaleX(${state.direction})`,\n        opacity: `${state.opacity}`\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        ref: animationContainer,\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"Cr5Sc9AQPEo5d0kRhJX2zdmoFoo=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","lottieSize","animationContainer","totalDuration","setTotalDuration","state","setState","position","direction","waiting","opacity","current","getDuration","partialDuration","interval","setInterval","newPosition","window","innerWidth","setTimeout","Math","random","clearInterval","className","children","style","left","transform","ref","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './animation.css';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\n\nconst Animation = () => {\n    const lottieSize = 250;\n    const animationContainer = useRef(null);\n    const [totalDuration, setTotalDuration] = useState(null);\n    const [state, setState] = useState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n\n    // Load the total duration of the animation at the start\n    useEffect(() => {\n        if(animationContainer.current) {\n            setTotalDuration(animationContainer.current.getDuration(true));\n        }\n    }, []);\n\n    useEffect(() => {\n        // Ensure totalDuration is loaded\n        if(!totalDuration) return;\n\n        // Animation duration up to 98%\n        const partialDuration = totalDuration * 0.98;\n\n        const interval = setInterval(() => {\n            if(state.waiting) return;\n            let newPosition = state.position + state.direction * 1;\n            if (newPosition > window.innerWidth - lottieSize && state.direction === 1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: window.innerWidth - lottieSize, direction: -1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else if (newPosition < -lottieSize && state.direction === -1) {\n                setState({...state, waiting: true, opacity: 0});\n                setTimeout(() => {\n                    setState({position: -lottieSize, direction: 1, waiting: false, opacity: 1});\n                }, Math.random() * 2000 + 1000);\n            } else {\n                setState({...state, position: newPosition});\n            }\n        }, 10);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [state, totalDuration]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    left: `${state.position}px`,\n                    transform: `scaleX(${state.direction})`,\n                    opacity: `${state.opacity}`\n\n                }}\n            >\n                <Lottie ref={animationContainer} animationData={squirrel} />\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,UAAU,GAAG,GAAG;EACtB,MAAMC,kBAAkB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACvC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IAACc,QAAQ,EAAE,CAACN,UAAU;IAAEO,SAAS,EAAE,CAAC;IAAEC,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAC,CAAC,CAAC;;EAErG;EACAlB,SAAS,CAAC,MAAM;IACZ,IAAGU,kBAAkB,CAACS,OAAO,EAAE;MAC3BP,gBAAgB,CAACF,kBAAkB,CAACS,OAAO,CAACC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClE;EACJ,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZ;IACA,IAAG,CAACW,aAAa,EAAE;;IAEnB;IACA,MAAMU,eAAe,GAAGV,aAAa,GAAG,IAAI;IAE5C,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAGV,KAAK,CAACI,OAAO,EAAE;MAClB,IAAIO,WAAW,GAAGX,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACG,SAAS,GAAG,CAAC;MACtD,IAAIQ,WAAW,GAAGC,MAAM,CAACC,UAAU,GAAGjB,UAAU,IAAII,KAAK,CAACG,SAAS,KAAK,CAAC,EAAE;QACvEF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAC,CAAC,CAAC;QAC/CS,UAAU,CAAC,MAAM;UACbb,QAAQ,CAAC;YAACC,QAAQ,EAAEU,MAAM,CAACC,UAAU,GAAGjB,UAAU;YAAEO,SAAS,EAAE,CAAC,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAEC,OAAO,EAAE;UAAC,CAAC,CAAC;QACnG,CAAC,EAAEU,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM,IAAIL,WAAW,GAAG,CAACf,UAAU,IAAII,KAAK,CAACG,SAAS,KAAK,CAAC,CAAC,EAAE;QAC5DF,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEI,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAC,CAAC,CAAC;QAC/CS,UAAU,CAAC,MAAM;UACbb,QAAQ,CAAC;YAACC,QAAQ,EAAE,CAACN,UAAU;YAAEO,SAAS,EAAE,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAEC,OAAO,EAAE;UAAC,CAAC,CAAC;QAC/E,CAAC,EAAEU,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;MACnC,CAAC,MAAM;QACHf,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAAEE,QAAQ,EAAES;QAAW,CAAC,CAAC;MAC/C;IACJ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAM;MACTM,aAAa,CAACR,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAACT,KAAK,EAAEF,aAAa,CAAC,CAAC;EAE1B,oBACIL,OAAA;IAAKyB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChC1B,OAAA;MACIyB,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACHlB,QAAQ,EAAE,UAAU;QACpBmB,IAAI,EAAG,GAAErB,KAAK,CAACE,QAAS,IAAG;QAC3BoB,SAAS,EAAG,UAAStB,KAAK,CAACG,SAAU,GAAE;QACvCE,OAAO,EAAG,GAAEL,KAAK,CAACK,OAAQ;MAE9B,CAAE;MAAAc,QAAA,eAEF1B,OAAA,CAACH,MAAM;QAACiC,GAAG,EAAE1B,kBAAmB;QAAC2B,aAAa,EAAEjC;MAAS;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjC,EAAA,CA1DID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}