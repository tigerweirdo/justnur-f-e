{"ast":null,"code":"var _jsxFileName = \"/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\";\nimport './animation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animation = () => {\n  _s();\n  const initialSize = 100;\n  const [state, setState] = useState({\n    position: -initialSize,\n    direction: 1\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(prevState => {\n        let newPosition = prevState.position + prevState.direction * 5;\n        if (newPosition > window.innerWidth - initialSize && prevState.direction === 1) {\n          return {\n            position: window.innerWidth - initialSize,\n            direction: -1\n          };\n        } else if (newPosition < -initialSize && prevState.direction === -1) {\n          return {\n            position: -initialSize,\n            direction: 1\n          };\n        } else {\n          return {\n            position: newPosition,\n            direction: prevState.direction\n          };\n        }\n      });\n    }, 20);\n    return () => clearInterval(interval);\n  }, [initialSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"squirrel\",\n      style: {\n        position: \"absolute\",\n        transform: `translateX(${state.position}px) scaleX(${state.direction})`,\n        width: `${initialSize}px`,\n        height: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: squirrel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Animation, \"VoAlg8BgU/ve1JVsc/q4MFciYgU=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useState","Lottie","squirrel","jsxDEV","_jsxDEV","Animation","_s","initialSize","state","setState","position","direction","interval","setInterval","prevState","newPosition","window","innerWidth","clearInterval","className","children","style","transform","width","height","animationData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/temmuzcetiner/Desktop/justnut/src/components/animation/animation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport squirrel from \"../../assets/squirrel.json\"\nimport './animation.css';\n\nconst Animation = () => {\n    const initialSize = 100;\n    const [state, setState] = useState({\n        position: -initialSize,\n        direction: 1\n    });\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setState(prevState => {\n                let newPosition = prevState.position + prevState.direction * 5;\n\n                if (newPosition > window.innerWidth - initialSize && prevState.direction === 1) {\n                    return {\n                        position: window.innerWidth - initialSize,\n                        direction: -1\n                    };\n                } else if (newPosition < -initialSize && prevState.direction === -1) {\n                    return {\n                        position: -initialSize,\n                        direction: 1\n                    };\n                } else {\n                    return {\n                        position: newPosition,\n                        direction: prevState.direction\n                    };\n                }\n            });\n        }, 20);\n\n        return () => clearInterval(interval);\n    }, [initialSize]);\n\n    return (\n        <div className=\"animation-container\">\n            <div \n                className=\"squirrel\" \n                style={{ \n                    position: \"absolute\",\n                    transform: `translateX(${state.position}px) scaleX(${state.direction})`,\n                    width: `${initialSize}px`,\n                    height: 'auto'\n                }}\n            >\n                <Lottie animationData={squirrel} />\n            </div>\n        </div>\n    );\n};\n\nexport default Animation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAC/BU,QAAQ,EAAE,CAACH,WAAW;IACtBI,SAAS,EAAE;EACf,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BJ,QAAQ,CAACK,SAAS,IAAI;QAClB,IAAIC,WAAW,GAAGD,SAAS,CAACJ,QAAQ,GAAGI,SAAS,CAACH,SAAS,GAAG,CAAC;QAE9D,IAAII,WAAW,GAAGC,MAAM,CAACC,UAAU,GAAGV,WAAW,IAAIO,SAAS,CAACH,SAAS,KAAK,CAAC,EAAE;UAC5E,OAAO;YACHD,QAAQ,EAAEM,MAAM,CAACC,UAAU,GAAGV,WAAW;YACzCI,SAAS,EAAE,CAAC;UAChB,CAAC;QACL,CAAC,MAAM,IAAII,WAAW,GAAG,CAACR,WAAW,IAAIO,SAAS,CAACH,SAAS,KAAK,CAAC,CAAC,EAAE;UACjE,OAAO;YACHD,QAAQ,EAAE,CAACH,WAAW;YACtBI,SAAS,EAAE;UACf,CAAC;QACL,CAAC,MAAM;UACH,OAAO;YACHD,QAAQ,EAAEK,WAAW;YACrBJ,SAAS,EAAEG,SAAS,CAACH;UACzB,CAAC;QACL;MACJ,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMO,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACIH,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChChB,OAAA;MACIe,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACHX,QAAQ,EAAE,UAAU;QACpBY,SAAS,EAAG,cAAad,KAAK,CAACE,QAAS,cAAaF,KAAK,CAACG,SAAU,GAAE;QACvEY,KAAK,EAAG,GAAEhB,WAAY,IAAG;QACzBiB,MAAM,EAAE;MACZ,CAAE;MAAAJ,QAAA,eAEFhB,OAAA,CAACH,MAAM;QAACwB,aAAa,EAAEvB;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvB,EAAA,CAjDID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}